<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1893,6865" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="PAD_ImportFlows" sap:VirtualizedContainerService.HintSize="1230,6800" sap2010:WorkflowViewState.IdRef="Sequence_208">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="FlowName" />
      <Variable x:TypeArguments="x:Boolean" Name="PADOpen" />
      <Variable x:TypeArguments="x:String" Name="FoundFlows" />
      <Variable x:TypeArguments="ui:UiElement" Name="FlowDesignerWindow" />
      <Variable x:TypeArguments="ui:UiElement" Name="PADMainMenuWindow" />
      <Variable x:TypeArguments="x:Boolean" Name="SignInRequired" />
      <Variable x:TypeArguments="x:Boolean" Name="FlowReady" />
      <Variable x:TypeArguments="x:Boolean" Name="RequirementsMet" />
      <Variable x:TypeArguments="x:String" Name="ImportPath" />
      <Variable x:TypeArguments="x:String" Name="FolderFilter" />
      <Variable x:TypeArguments="x:String" Name="SubfolderParent" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1168,173" sap2010:WorkflowViewState.IdRef="LogMessage_82" Message="[&quot;PAD_ImportFlows: START&quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IO_CheckResolutionRequirements - Invoke Workflow File (IO Actions\IO_CheckResolutionRequirements.xaml)" sap:VirtualizedContainerService.HintSize="1168,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" UnSafe="False" WorkflowFileName="IO Actions\IO_CheckResolutionRequirements.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="RequirementsMet">[RequirementsMet]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[RequirementsMet]" DisplayName="If resolution requirements are met, continue" sap:VirtualizedContainerService.HintSize="1168,6171" sap2010:WorkflowViewState.IdRef="If_23">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="1134,5749" sap2010:WorkflowViewState.IdRef="Sequence_206">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IO_ObtainAndAnalyzeExportPath - Invoke Workflow File (IO_ObtainAndAnalyzeExportPath.xaml)" sap:VirtualizedContainerService.HintSize="1072,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="IO Actions\IO_ObtainAndAnalyzeExportPath.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="ImportPath">[ImportPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="FolderFilter">[FolderFilter]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_CheckIfOpenAndSignedIn - Invoke Workflow File (PAD Actions\PAD_CheckIfOpenAndSignedIn.xaml)" sap:VirtualizedContainerService.HintSize="1072,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="PAD Actions\PAD_CheckIfOpenAndSignedIn.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="PADOpen">[PADOpen]</OutArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="SignInRequired">[SignInRequired]</OutArgument>
              <OutArgument x:TypeArguments="ui:UiElement" x:Key="PADMainMenuWindow">[PADMainMenuWindow]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_ClosePopups - Invoke Workflow File (PAD Actions\PAD_ClosePopups.xaml)" sap:VirtualizedContainerService.HintSize="1072,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="PAD Actions\PAD_ClosePopups.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:UiElement" x:Key="PADMainMenuWindow">[PADMainMenuWindow]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[PADOpen and SignInRequired=False]" DisplayName="If PAD is open and signed in" sap:VirtualizedContainerService.HintSize="1072,5049" sap2010:WorkflowViewState.IdRef="If_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="1038,4636" sap2010:WorkflowViewState.IdRef="Sequence_204">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachFolderX DisplayName="For each folder in ImportPath, import a flow" FilterByName="[FolderFilter]" Folder="[ImportPath]" sap:VirtualizedContainerService.HintSize="976,4548" sap2010:WorkflowViewState.IdRef="ForEachFolderX_14" IncludeSubFolders="False" OrderBy="NameAscFirst" SkipFoldersWithoutPermission="False">
                  <ui:ForEachFolderX.Body>
                    <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="FlowMainFolder" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="942,4265" sap2010:WorkflowViewState.IdRef="Sequence_203">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[String.IsNullOrEmpty(FolderFilter)]" DisplayName="If only one flow import" sap:VirtualizedContainerService.HintSize="880,784" sap2010:WorkflowViewState.IdRef="If_25">
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_187">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign cleaned up flow name from folder name" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_45">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[FlowName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[FlowMainFolder.Name.Replace("exported_","")]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_46">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[SubfolderParent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[FlowMainFolder.FullName]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_188">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign cleaned up flow name from folder name" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_47">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[FlowName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[FlowMainFolder.Name.Replace("exported_","")]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_48">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[SubfolderParent]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[FlowMainFolder.FullName]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Sequence DisplayName="Check and Create Flows" sap:VirtualizedContainerService.HintSize="880,3393" sap2010:WorkflowViewState.IdRef="Sequence_202">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_CheckIfFlowsExist - Invoke Workflow File (PAD Actions\PAD_CheckIfFlowsExist.xaml)" sap:VirtualizedContainerService.HintSize="818,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="PAD Actions\PAD_CheckIfFlowExists.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="FlowName">[FlowName]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="FoundFlows">[FoundFlows]</OutArgument>
                              <InArgument x:TypeArguments="ui:UiElement" x:Key="PADMainMenuWindow">[PADMainMenuWindow]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <If Condition="[String.IsNullOrEmpty(FoundFlows)]" DisplayName="If a flow with selected backup name is not present in My flows" sap:VirtualizedContainerService.HintSize="818,3078" sap2010:WorkflowViewState.IdRef="If_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Import a flow" sap:VirtualizedContainerService.HintSize="784,2548" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:RetryScope DisplayName="Create new Flow when Designer panel is ready" sap:VirtualizedContainerService.HintSize="722,57" sap2010:WorkflowViewState.IdRef="RetryScope_6">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="1644,1737" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="1582,57" sap2010:WorkflowViewState.IdRef="Assign_49">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[FlowReady]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_CreateNewFlow - Invoke Workflow File (PAD Actions\PAD_CreateNewFlow.xaml)" sap:VirtualizedContainerService.HintSize="1582,57" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="PAD Actions\PAD_CreateNewFlow.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="FlowName">[FlowName]</InArgument>
                                            <InArgument x:TypeArguments="ui:UiElement" x:Key="PADMainMenuWindow">[PADMainMenuWindow]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                        <uix:NCheckState DisplayName="Check App State 'PAD Designer Panel'" sap:VirtualizedContainerService.HintSize="1582,1623" sap2010:WorkflowViewState.IdRef="NCheckState_17" OutUiElement="[FlowDesignerWindow]" Version="V3">
                                          <uix:NCheckState.IfExists>
                                            <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="1078,1383" sap2010:WorkflowViewState.IdRef="Sequence_192">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1016,175" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Info" Message="[&quot;PAD Designer Panel for flow &quot;+FlowName+&quot; opened&quot;]" />
                                              <uix:NCheckState DisplayName="Check App State 'Status: Ready'" Exists="[FlowReady]" sap:VirtualizedContainerService.HintSize="1016,1118" sap2010:WorkflowViewState.IdRef="NCheckState_16" Version="V3">
                                                <uix:NCheckState.IfExists>
                                                  <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="450,258" sap2010:WorkflowViewState.IdRef="Sequence_189">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,168" sap2010:WorkflowViewState.IdRef="LogMessage_87" Message="[&quot;Flow ready for import&quot;]" />
                                                  </Sequence>
                                                </uix:NCheckState.IfExists>
                                                <uix:NCheckState.IfNotExists>
                                                  <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="512,876" sap2010:WorkflowViewState.IdRef="Sequence_191">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,175" sap2010:WorkflowViewState.IdRef="LogMessage_88" Level="Warn" Message="[&quot;Flow ready not ready for import&quot;]" />
                                                    <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Never" DisplayName="Use Application/Browser" sap:VirtualizedContainerService.HintSize="450,611" sap2010:WorkflowViewState.IdRef="NApplicationCard_6" InUiElement="[FlowDesignerWindow]" OpenMode="Never" ScopeGuid="d8bc3595-1b58-4e49-a339-a6448b7f4310" Version="V2">
                                                      <uix:NApplicationCard.Body>
                                                        <ActivityAction x:TypeArguments="x:Object">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,449" sap2010:WorkflowViewState.IdRef="Sequence_190">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" sap:VirtualizedContainerService.HintSize="354,119" sap2010:WorkflowViewState.IdRef="Activate_6">
                                                              <ui:Activate.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="1bb6b81c-aa32-473c-b6e1-197d7f8480d6">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:Activate.Target>
                                                            </ui:Activate>
                                                            <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="354,240" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_6" Shortcuts="[d(hk)][d(alt)][k(f4)][u(alt)][u(hk)]" Version="V3">
                                                              <uix:NKeyboardShortcuts.VerifyOptions>
                                                                <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                                                  <uix:VerifyExecutionOptions.Retry>
                                                                    <InArgument x:TypeArguments="x:Boolean" />
                                                                  </uix:VerifyExecutionOptions.Retry>
                                                                  <uix:VerifyExecutionOptions.Timeout>
                                                                    <InArgument x:TypeArguments="x:Double" />
                                                                  </uix:VerifyExecutionOptions.Timeout>
                                                                </uix:VerifyExecutionOptions>
                                                              </uix:NKeyboardShortcuts.VerifyOptions>
                                                            </uix:NKeyboardShortcuts>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </uix:NApplicationCard.Body>
                                                      <uix:NApplicationCard.TargetApp>
                                                        <uix:TargetApp Area="0, 0, 0, 0" />
                                                      </uix:NApplicationCard.TargetApp>
                                                    </uix:NApplicationCard>
                                                  </Sequence>
                                                </uix:NCheckState.IfNotExists>
                                                <uix:NCheckState.Target>
                                                  <uix:TargetAnchorable DesignTimeRectangle="76, 756, 32, 16" DesignTimeScaleFactor="1" FullSelectorArgument="&lt;ctrl automationid='NormalStatusBarItem' /&gt;&lt;ctrl automationid='StatusTextBlock' name='Status: Ready' /&gt;" FuzzySelectorArgument="&lt;ctrl automationid='NormalStatusBarItem' /&gt;&lt;ctrl automationid='StatusTextBlock' name='Status: Ready' role='text' check:text='Status: Ready' /&gt;" Guid="cddcfcb3-a1dd-44d0-bd73-b10f356584f8" InformativeScreenshot="bcb92050fef8fe77078a58f86dd08818.png" ScopeSelectorArgument="&lt;wnd app='pad.designer.exe' aaname='Power Automate*' automationid='DesignerMainWindow' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive" />
                                                </uix:NCheckState.Target>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </uix:NCheckState>
                                            </Sequence>
                                          </uix:NCheckState.IfExists>
                                          <uix:NCheckState.IfNotExists>
                                            <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="450,258" sap2010:WorkflowViewState.IdRef="Sequence_193">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,168" sap2010:WorkflowViewState.IdRef="LogMessage_89" Level="Error" Message="[&quot;PAD Designer Panel for flow &quot;+FlowName+&quot; failed to open&quot;]" />
                                            </Sequence>
                                          </uix:NCheckState.IfNotExists>
                                          <uix:NCheckState.Target>
                                            <uix:TargetAnchorable DesignTimeRectangle="0, 0, 1200, 800" DesignTimeScaleFactor="1" Guid="2f9afdf3-8374-42a8-8255-309f75aa5b51" ImageBase64="" InformativeScreenshot="54e479316c45a2448026d8cbd121f0d8.png" ScopeSelectorArgument="[string.Format(&quot;&lt;wnd app='pad.designer.exe' aaname='Power Automate | {0}' cls='HwndWrapper*' /&gt;&quot;, FlowName)]" SearchSteps="Selector" Version="V4" Visibility="Interactive" />
                                          </uix:NCheckState.Target>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </uix:NCheckState>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean">
                                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check True" Expression="[FlowReady]" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="CheckTrue_6" />
                                    </ActivityFunc>
                                  </ui:RetryScope.Condition>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:RetryScope>
                                <ui:ForEachFolderX DisplayName="For Each Flow Contents folder in Main flow folder" Folder="[SubfolderParent]" sap:VirtualizedContainerService.HintSize="722,2355" sap2010:WorkflowViewState.IdRef="ForEachFolderX_13" IncludeSubFolders="False" OrderBy="NameAscFirst" SkipFoldersWithoutPermission="False">
                                  <ui:ForEachFolderX.Body>
                                    <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
                                      <ActivityAction.Argument1>
                                        <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="Subfolder" />
                                      </ActivityAction.Argument1>
                                      <ActivityAction.Argument2>
                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                      </ActivityAction.Argument2>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="688,2063" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:IfElseIfV2 Condition="[Subfolder.Name.contains(&quot;Arguments&quot;)]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="626,1975" sap2010:WorkflowViewState.IdRef="IfElseIfV2_7">
                                          <ui:IfElseIfV2.Else>
                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_91" Level="Error" Message="[&quot;Unrecognized folder in export directory: &quot;+Subfolder.FullName]" />
                                            </Sequence>
                                          </ui:IfElseIfV2.Else>
                                          <ui:IfElseIfV2.ElseIfs>
                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Subfolder.Name.contains(&quot;Subflows&quot;)]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_7">
                                                <ui:IfElseIfBlock.Then>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,1176" sap2010:WorkflowViewState.IdRef="Sequence_197">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ForEachFileX DisplayName="For Each File in Folder, create a subflow" Folder="[Subfolder.FullName]" sap:VirtualizedContainerService.HintSize="530,1088" sap2010:WorkflowViewState.IdRef="ForEachFileX_13" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                                                      <ui:ForEachFileX.Body>
                                                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                                                          <ActivityAction.Argument1>
                                                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="SubflowFile" />
                                                          </ActivityAction.Argument1>
                                                          <ActivityAction.Argument2>
                                                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                                          </ActivityAction.Argument2>
                                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,805" sap2010:WorkflowViewState.IdRef="Sequence_196">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="SubflowDataFile" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_90" Message="[&quot;Importing Subflow: &quot;+SubflowFile.Name]" />
                                                            <ui:ReadTextFile File="{x:Null}" Content="[SubflowDataFile]" DisplayName="Read Subflow Data File" FileName="[SubflowFile.FullName]" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="ReadTextFile_12" />
                                                            <Assign sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[SubflowDataFile]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(SubflowFile.Name.Replace(".subflow", "").Equals("Main"),
    SubflowDataFile.Replace("FUNCTION Main_copy GLOBAL" &amp; vbCrLf, "").Replace(vbCrLf &amp; "END FUNCTION", ""),
    SubflowDataFile)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_CreateSubflowFromDataFile - Invoke Workflow File (PAD Actions\PAD_CreateSubflowFromDataFile.xaml)" sap:VirtualizedContainerService.HintSize="434,204" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" UnSafe="False" WorkflowFileName="PAD Actions\PAD_CreateSubflowFromDataFile.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="FlowName">[FlowName]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="SubflowName">[SubflowFile.Name.Replace(".subflow","")]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="SubflowDataFile">[SubflowDataFile]</InArgument>
                                                                <InArgument x:TypeArguments="ui:UiElement" x:Key="FlowDesignerWindow">[FlowDesignerWindow]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                            <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Delay_13" />
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:ForEachFileX.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:ForEachFileX>
                                                  </Sequence>
                                                </ui:IfElseIfBlock.Then>
                                              </ui:IfElseIfBlock>
                                            </sc:BindingList>
                                          </ui:IfElseIfV2.ElseIfs>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:IfElseIfV2.Then>
                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,283" sap2010:WorkflowViewState.IdRef="Sequence_195">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_ImportArguments - Invoke Workflow File (PAD Actions\PAD_ImportArguments.xaml)" sap:VirtualizedContainerService.HintSize="354,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="PAD Actions\PAD_ImportArguments.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="FlowName">[FlowName]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="BackupPath">[Subfolder.FullName]</InArgument>
                                                  <InArgument x:TypeArguments="ui:UiElement" x:Key="FlowDesignerWindow">[FlowDesignerWindow]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </Sequence>
                                          </ui:IfElseIfV2.Then>
                                        </ui:IfElseIfV2>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachFolderX.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEachFolderX>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PAD_CloseFlow - Invoke Workflow File (PAD Actions\PAD_CloseFlow.xaml)" sap:VirtualizedContainerService.HintSize="722,48" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" UnSafe="False" WorkflowFileName="PAD Actions\PAD_CloseFlow.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="FlowName">[FlowName]</InArgument>
                                    <InArgument x:TypeArguments="ui:UiElement" x:Key="FlowDesignerWindow">[FlowDesignerWindow]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Flow already exists in PAD" sap:VirtualizedContainerService.HintSize="416,369" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,173" sap2010:WorkflowViewState.IdRef="LogMessage_83" Message="[&quot;Flow with the name &quot;+FlowName+&quot; exists in My Flows list&quot;]" />
                                <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:10" Caption="Flow already exists" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="354,108" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[&quot;Flow with the name &quot;+FlowName+&quot; already exists in My Flows list. For the sake of integrity, skipping import of this flow&quot;]" />
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachFolderX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachFolderX>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_205">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Warn" Message="[&quot;PAD did not open, quitting&quot;]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_207">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Warn" Message="[&quot;Screen resolution requirements are not met after multiple prompts, or user clicked on Cancel&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,164" sap2010:WorkflowViewState.IdRef="LogMessage_92" Message="[&quot;PAD_ImportFlows: END&quot;]" />
  </Sequence>
</Activity>